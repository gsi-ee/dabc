
# make same trick as in C includes to avoid multiple include 
ifndef Dabc_Makefile_config
Dabc_Makefile_config = true


#rules which does not require any dependency checks
FASTRULES       = package clean clean-bak

.PHONY: all libs exes tests $(FASTRULES)



### dabc pathes:

DABC_OS = "Linux"

DABC_ARCH = $(shell uname -m)

BLD_DIR := $(DABC_ARCH)

ifndef DABCSYS
error "DABCSYS is not set correctly"
DABCSYS=$(CURDIR)
endif

#in this variable one should put directories, which should be created/destroyed by make 
CREATE_DIRS =

ifdef DABCMAINMAKE
DABCDLLPATH    = lib
DABCINCPATH    = include
DABCBINPATH    = bin
else
DABCDLLPATH    = $(DABCSYS)/lib
DABCINCPATH    = $(DABCSYS)/include
DABCBINPATH    = $(DABCSYS)/bin
endif

# automatically created directory for libraries 
TGTDLLPATH      = lib

# automatically created directory for binaries 
TGTBINPATH      = bin

#list of directories with different tests
TEST_DIRS = 

#### File suffixes: ###
ObjSuf        = o
SrcSuf        = cxx
CSuf          = c
HedSuf        = h 
ExeSuf        =
DllSuf        = so
DepSuf        = d
DllSuf2       = so

OutPutOpt     = -o

##### prefixes
LIB_PREFIX    = lib

#### Linker definitions: ###
LD            = g++
LDFLAGS       = -O
SOFLAGS       = -shared -Wl,-soname,

#### File system symbolic link: ###
LN            = ln -sf
RM            = rm -f
MV            = mv

#### Compilers: ##
CXX           = g++
CC            = gcc

#### Library version numbers: ###
MAJOR         = 0
MINOR         = 0.01
VERSSUF       = $(MAJOR).$(MINOR)

## This two copiler flags are alternative. 
## When DOOPTIMIZATION = false, first is used otherwise second 
DEBUGMODE     = -g 
OPTIMIZEMODE  = -O2 

# switch on optimization for all object files
DOOPTIMIZATION = true
DOINDEXCHECK = false

#this is OFED components location
OFED_DIR        = /usr/local/ofed
OFED_LIBDIR     = $(OFED_DIR)/lib64
OFED_MCAST      = false
OFED_INCLUDES   = $(OFED_DIR)/include 
OFED_LIBS       = -libverbs

ifeq ($(OFED_MCAST), true)
OFED_INCLUDES += $(OFED_DIR)/include/infiniband
OFED_LIBS     += -lopensm -losmcomp -losmvendor -lrt
endif

# switch to enable OFED library support 
ifneq ($(wildcard $(OFED_LIBDIR))$(wildcard $(OFED_DIR)),)
USEOFEDVERBS    = true
endif

ifneq ($(ROOTSYS),)
USEROOT        = true
ROOT_LIBS      = $(shell root-config --libs)
ROOT_INCLUDE   = $(ROOTSYS)/include
endif


#this is MPRACE components location
MPRACE_DIR      = $(DABCSYS)/linuxdrivers/mprace
MPRACE_LIBDIR   = $(MPRACE_DIR)/lib
MPRACE_INCLUDES = $(MPRACE_DIR)/include 
MPRACE_DEFINITIONS = 
MPRACE_LIBS     = -lmprace 

#this is Mannheim pciDriver components location
PCIDRIVER_DIR      = $(DABCSYS)/linuxdrivers/pciDriver2
PCIDRIVER_LIBDIR   = $(PCIDRIVER_DIR)/lib
PCIDRIVER_INCLUDES = $(PCIDRIVER_DIR)/include 
PCIDRIVER_DEFINITIONS = 
PCIDRIVER_LIBS     = -lpcidriver 

ifneq ($(wildcard $(MPRACE_LIBDIR)/libmprace.so),)
USEMPRACE   = true
endif

ifdef DABC_DEBUG
DEBUGLEVEL=$(DABC_DEBUG)
DOOPTIMIZATION = false
endif

ifdef DABC_OPT
DEBUGLEVEL=
DOOPTIMIZATION = true
endif


WARNINGS      = -Wall
OPTIONS       = -fPIC

ifeq ($(shell uname -m),x86_64)
OPTIONS      += -m64
endif

DEFINITIONS   =
INCLUDES      = 

C_INCLUDES    = 
C_DEFINITIONS = 

ifdef DEBUGLEVEL
DEFINITIONS += DEBUGLEVEL=$(DEBUGLEVEL)
endif

ifeq ($(DOINDEXCHECK), true)
DEFINITIONS += DO_INDEX_CHECK
endif

#### Combine compilers flags in one variable: ###
CXXFLAGS      =  $(WARNINGS) $(OPTIONS) $(DEFINITIONS:%=-D%) $(INCLUDES:%=-I%) -I$(DABCINCPATH)

CFLAGS        = $(OPTIONS) $(C_DEFINITIONS:%=-D%) $(C_INCLUDES:%=-I%)


# build scripts

MakeDepend    = $(DABCSYS)/build/depend.sh $(ObjSuf) $(DepSuf) "$(BLD_DIR)"

MakeLib       = $(DABCSYS)/build/makelib.sh $(LD) "$(RM)" $(MV) "$(LN)" "$(LDFLAGS)" "$(SOFLAGS)" $(DllSuf)

CleanLib      = $(DABCSYS)/build/cleanlib.sh "$(DABC_OS)" $(DllSuf) $(VERSSUF)

LIBS_CORESET = -lpthread \
               -L$(DABCDLLPATH) \
               -lDabcBase

LIBS_PLUGINS = 

ifdef DABCMAINMAKE
LIBS_EXTRA = $(patsubst $(TGTDLLPATH)/$(LIB_PREFIX)%.$(DllSuf), -l%, $(LIBS_PLUGINS))
else
-include $(DABCSYS)/config/Makefile.plugins
endif
               
LIBS_FULLSET = $(LIBS_CORESET) \
              -lDabcSctrl \
               $(LIBS_EXTRA) 

all: libs exes tests

libs::

exes::	

clean::

tests::

endif
