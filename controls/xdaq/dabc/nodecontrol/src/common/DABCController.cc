/* Generated by Together */

#include "DABCController.h"
#include "DABCManager.h"
#include "DABCRegistry.h"


XDAQ_INSTANTIATOR_IMPL(dabc::xd::Controller)

dabc::xd::Controller::Controller(xdaq::ApplicationStub* stub)
	throw (xdaq::exception::Exception)
	: dabc::xd::Node(stub)
{	
    Manager()->SetMainManager(true);
    
    setupSystemDir_="-";
    setupUserDir_="-";
    setupUser_="-";
    setupFile_="-";
    Registry()->RegisterSerializable(_DABC_SERVICE_SYSTEMDIR_, &setupSystemDir_, true,true);
    Registry()->RegisterSerializable(_DABC_SERVICE_USERDIR_, &setupUserDir_, true,true);
    Registry()->RegisterSerializable(_DABC_SERVICE_USER_, &setupUser_, true,true);
  
    
    
    Registry()->RegisterSerializable(_DABC_SERVICE_SETUP_, &setupFile_, true,true);
    Registry()->AddInfoRecord(_DABC_SERVICE_SETUPINFO_,"Unknown setup file",1,"Yellow");

          
}	


dabc::xd::Controller::~Controller()
{
   
}


void dabc::xd::Controller::actionPerformed (xdata::Event& e) 
{ 
	//std::cout <<"dabc::Application actionPerformed got event type:"<<e.type() << std::endl;
   if ((e.type() == "ItemChangedEvent"))
   {
         xdata::ItemChangedEvent& ce=dynamic_cast<xdata::ItemChangedEvent&>(e);
         //std::cout <<"change event pointer is "<< (int*) &ce <<", event pointer is "<<(int*) &e<< std::endl;
         //std::string itemname = dynamic_cast<xdata::ItemChangedEvent&>(e).itemName();
         std::string itemname =ce.itemName();
         
         //std::cout <<"dabc::Application ItemChangedEvent for item "<<itemname << std::endl;
         
        if (itemname==_DABC_SERVICE_SETUP_)         
            {
               std::string setupmessage="Initial setup loaded from "+setupFile_.toString();
               Registry()->UpdateInfoRecord(_DABC_SERVICE_SETUPINFO_,setupmessage,1,"Green");
            }          
   }   
  dabc::xd::Node::actionPerformed(e);    
}


