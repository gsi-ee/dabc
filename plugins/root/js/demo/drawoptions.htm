<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>

   <meta http-equiv="X-UA-Compatible" content="IE=Edge; text/html">

   <title>Supported classes and options by JSROOT</title>
   
   <script src="../scripts/JSRootCore.js" type="text/javascript"></script>

   <script type='text/javascript'>

      function file_error(str) {
         $('#debug').append("<h4>" + str + "</h4>"); 
      }

      var global_dir = "files/"; // for testing

      if (JSROOT.source_dir.indexOf("root.cern.ch")>0)
         global_dir = "https://root.cern.ch/js/files/";
      if (JSROOT.source_dir.indexOf("web-docs.gsi.de")>0)
         global_dir = "http://web-docs.gsi.de/~linev/js/files/";
      
      function draw_item(file, itemname, divid, drawopt) {
         file.ReadObject(itemname, function(obj) {
            if (obj==null) return file_error("In file " + file.fURL + " item " + itemname + " cannot be find");
            JSROOT.draw(divid, obj, drawopt); 
         });
      }
      
      function draw_item_options(file, itemname, divid, options, factor) {
         var arr = options.split(";");

         var fname = (file.fURL.indexOf("http://")==0) ? file.fURL : "demo/"+ file.fURL;   

         var has_equal = false;
         
         var html = 'File: <a href="../index.htm?file=' + fname + '" target="_blank">' + fname.slice(fname.lastIndexOf('/')+1) + '</a>';
         for (var i in arr) {
            if (i==0) html += " Item: "; else
            if (i==1) html += " Options: "; else html += ", ";
            html += '<a href="../index.htm?nobrowser&file=' + fname; 
            html += '&item=' + itemname + '&';
             
            if (arr[i].indexOf("=")<0) html += 'opt=' + arr[i];
                                  else { html += arr[i]; has_equal = true; } 
            
            html += '" target="_blank">';
            if (i==0) html += itemname; else
            if (arr[i] == "") html += '&lt;default&gt;'; else html += arr[i]; 
            html += '</a>'; 
         }
         html += "<br/><br/>";
         
         $("#" + divid).append(html);

         if (JSROOT.GetUrlOption("minimal") || 
             ((JSROOT.GetUrlOption("all")==null) && (JSROOT.GetUrlOption("default")==null))) return;
             
         // special case - do not draw on main page
         if (has_equal) return;    
         
         var w = JSROOT.GetUrlOption("w", null, "800");
         var h = JSROOT.GetUrlOption("h", null, "600");
         if (factor!=null) h = w * factor;
         
         for (var i in arr) {
            var subid = divid + "_" + i;
            
            var html = '<div id="' + subid + '" style="width:'+w+'px; height:'+h+'px"></div>';
            $("#" + divid).append(html);
            
            draw_item(file, itemname, subid, arr[i]);
            
            if (JSROOT.GetUrlOption("all")==null) return;
         }
      }
      
      function LoadFile(filename, filecallback) {

         var dir = JSROOT.GetUrlOption("path");
         if (dir==null) dir = global_dir;

         // do not read file when not required - create only fake instance
         if (JSROOT.GetUrlOption("minimal") || 
             ((JSROOT.GetUrlOption("all")==null) && (JSROOT.GetUrlOption("default")==null)))
                return filecallback({ fURL: dir+filename });
            
         new JSROOT.TFile(dir + filename + "+", function(file) {
            if (file==null) return file_error(dir+filename + " cannot be opened");
            filecallback(file);
         });   
      }
   
      function CreateGui() {

         $('#debug').empty();
         
         $('#debug').append("<h2>JavaScript ROOT version " + JSROOT.version + "</h2>");
         
         var arg = "&w=" + JSROOT.GetUrlOption("w", null, "800") + 
                   "&h=" + JSROOT.GetUrlOption("h", null, "600");
         if (JSROOT.GetUrlOption("path")!=null) {
            global_dir = JSROOT.GetUrlOption("path");               
            arg += "&path=" + global_dir;
         }

         $('#debug').append("<a href='drawoptions.htm?minimal" + arg + "'>Only items/options list</a><br/>"); 
         $('#debug').append("<a href='drawoptions.htm?default" + arg + "'>Drawings with default options</a><br/>"); 
         $('#debug').append("<a href='drawoptions.htm?all" + arg + "'>Drawings for all supported options</a><br/>"); 

         LoadFile("hsimple.root", function(file) {
            draw_item_options(file, "hpx;1", "h1_draw", ";P;P0");
            draw_item_options(file, "hpxpy;1", "h2_draw", ";COL;COLZ;COL2;COL3;LEGO");
            draw_item_options(file, "hprof;1", "prof_draw", ";E1");
         });

         LoadFile("glbox.root", function(file) {
            draw_item_options(file, "h31;1", "h3_draw", "");
         });
         
         LoadFile("graph.root", function(file) {
            draw_item_options(file, "Graph;1", "gr_draw", ";L;P");
         });


         LoadFile("fillrandom.root", function(file) {
            draw_item_options(file, "sqroot;1", "f1_draw", "");
         });

         LoadFile("rf107.root", function(file) {
            draw_item_options(file, "rf107_plotstyles;1", "can_draw", "", 0.);
         });

         LoadFile("ct.root", function(file) {
            draw_item_options(file, "ct;1", "can2_draw", "", 0.);
         });

         LoadFile("zdemo.root", function(file) {
            draw_item_options(file, "zdemo;1", "can3_draw", "", 0.);
         });

         if (global_dir.indexOf("root.cern.ch")<0)
            LoadFile("JPsi_evolution.root", function(file) {
               draw_item_options(file, "CutTrees/cut1/C_cut1 < 2.85714;1", "can4_draw", "", 0.);
            });
         
         LoadFile("stacks.root", function(file) {
            draw_item_options(file, "stacks;1", "can5_draw", "", 0.);
         });

         LoadFile("legends.root", function(file) {
            draw_item_options(file, "legends;1", "can6_draw", "", 0.);
         });

         LoadFile("exclusion.root", function(file) {
            draw_item_options(file, "exclusion;1", "can7_draw", "", 0.);
         });

         if (global_dir.indexOf("root.cern.ch")<0) {
            LoadFile("can4.root", function(file) {
               draw_item_options(file, "c1;1", "can8_draw", "", 0.);
            });
            LoadFile("higgs_c.root", function(file) {
               draw_item_options(file, "c;1", "can9_draw", "col=1;col=2;col=3", 0.);
            });
         }

         
         // JSROOT.RegisterForResize(function() { if (objpainter) objpainter.CheckResize(); });
      }
   </script>
   
</head>

<body onload="JSROOT.AssertPrerequisites(JSROOT.GetUrlOption('minimal')!=null ? '' : '2d;3d;io', CreateGui, 'debug')">

  <div id="debug">loading...</div>

  <h1>TH1 class</h1> 

  <div id="h1_draw"></div>

  <h1>TH2 class</h1> 

  <div id="h2_draw"></div>

  <h1>TH3 class</h1> 

  <div id="h3_draw"></div>

  <h1>TProfile class</h1> 

  <div id="prof_draw"></div>

  <h1>TGraph class</h1> 

  <div id="gr_draw"></div>

  <h1>TF1 class</h1> 

  <div id="f1_draw"></div>

  <h1>TCanvas class</h1> 

  <div id="can_draw"></div>
  <div id="can2_draw"></div>
  <div id="can3_draw"></div>
  <div id="can4_draw"></div>
  <div id="can5_draw"></div>
  <div id="can6_draw"></div>
  <div id="can7_draw"></div>
  <div id="can8_draw"></div>
  <div id="can9_draw"></div>
  
</body>

</html>

