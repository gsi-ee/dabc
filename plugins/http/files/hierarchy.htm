<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>

	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>DABC node hierarchy</title>
	
	<link rel="stylesheet" href="httpsys/files/jquery.treeview.css" />
	<link rel="stylesheet" href="httpsys/files/screen.css" />
	
	<script src="httpsys/scripts/jquery.js" type="text/javascript"></script>
	<script src="httpsys/scripts/jquery.cookie.js" type="text/javascript"></script>
	<script src="httpsys/scripts/jquery.treeview.js" type="text/javascript"></script>
	<script src="httpsys/scripts/jquery.treeview.edit.js" type="text/javascript"></script>
	<script src="httpsys/scripts/jquery.treeview.async.js" type="text/javascript"></script>
   <script src="httpsys/scripts/raphael.2.1.0.min.js" type="text/javascript" ></script>
   <script src="httpsys/scripts/justgage.1.0.1.min.js" type="text/javascript" ></script>
	
	<script type='text/javascript'>
	
	   var last_index = 0;

      // object to submit requests to the server
      var req;
      
      // list of full names 	   
	   var gaug_list = new Array();

      // list of full names 	   
	   var gaug_ref = new Array();

      // list of gauge ids  	   
	   var gaug_uids = new Array();
	
			// Get an XMLHttpRequest object in a portable way.
		function newRequest()
		{
		  req = false;
		  // For Safari, Firefox, and other non-MS browsers
		  if (window.XMLHttpRequest) {
		    try {
		      req = new XMLHttpRequest();
		    } catch (e) {
		      req = false;
		    }
		  } else if (window.ActiveXObject) {
		    // For Internet Explorer on Windows
		    try {
		      req = new ActiveXObject("Msxml2.XMLHTTP");
		    } catch (e) {
		      try {
		        req = new ActiveXObject("Microsoft.XMLHTTP");
		      } catch (e) {
		        req = false;
		      }
		    }
		  }
		}
	
	   function initGUI() {
	 	  $("#black").treeview( {
	 	     url: "nodetopology.txt",
		     control: "#treecontrol",
		     persist: "cookie",
		     cookieId: "treeview-black"
	      });
	      
	      setInterval(updateChart, 3000);
	   }
	   
	   function getRequest()
		{
		   req.open("POST", "myreq.htm", false);
         req.send();
         return JSON.parse(req.responseText);
      }
      
      function updateChart() {
         if (gaug_list.length == 0) return;
          
         var args = "chartreq.htm?";
          
         for (var i in gaug_list) {
            if (i>0) args+="&";
            args+=gaug_list[i];
         }

         if (!req) newRequest();
 		   req.open("POST", args, false);
         req.send();
         
         
         // var info = "<br><h5> value = " + req.responseText + "</h5>";
         // $("#"+gaug_uids[0]+"_title").append(info);

         // var reply = JSON.parse(req.responseText);
         var repl = JSON && JSON.parse(req.responseText) || $.parseJSON(req.responseText);

         // alert("Get response with " + repl);

         gaug_ref[0].refresh(repl[0].value);

      }
	   
	   
	    
  	   function displayObject(item) {
  	       //alert("Call display");
          //return;
          var name = item.textContent;
          var uid = "gauge_";
          uid += last_index++; 
          
          if (!name) name = "Anything";
          
          // var fullname = item.attr("fullname");
          var fullname = item.getAttribute("fullname");
          
          // do not display same rate many times
          for (var i in gaug_list) {
            if (gaug_list[i] == fullname) return;
          }
          
          if (!fullname) fullname = "not found"; 

          var entryInfo = 
            "<div id='"+uid+"_title'> </div>"+
            "<div id='"+uid+ "' class='200x160px'> </div> \n";
          $("#report").append(entryInfo);

          $("#"+uid+"_title").append("<h5> name: " + name + "  full:" + fullname + " </h5>");

	       gaug_ref.push( new JustGage({
	          id: uid, 
             value: 67,
             min: 0,
             max: 100,
             title: name
          })); 

          gaug_list.push(fullname);
          gaug_uids.push(uid);
      }   
	    
	    
   	$(document).ready(initGUI);
   	
	</script>
	
</head>

<body>
	
	<div id="overlay"><font face="Verdana" size="1px">DABC version 2.1</font></div>
	
	<div id="main" class="column" style="width:300px;float:left;">
   
      <h1><font face="Verdana" size="4">DABC node hierarchy</font></h1>
      
      <!--input style="padding:2px; margin-left:10px;" onclick="displayObject()" type="button" title="Clear All" value="Display"/-->

      <div id="treecontrol">
		   <a title="Collapse the entire tree below" href="#"><img src="httpsys/images/minus.gif" /> Collapse All</a>
		   <a title="Expand the entire tree below" href="#"><img src="httpsys/images/plus.gif" /> Expand All</a>
   		<a title="Toggle the tree below, opening closed branches, closing open branches" href="#">Toggle All</a>
	   </div>
      <div id="status">
       	<ul id="black" class="treeview-black">
 	      </ul>
      </div>
      
      
  </div>

  <div id="reportHolder" class="column" style="width:500px;float:left;">
     <div id="report"> </div>
  </div>
  
</body>
</html>

