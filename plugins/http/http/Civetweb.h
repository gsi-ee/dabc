// $Id$

/************************************************************
 * The Data Acquisition Backbone Core (DABC)                *
 ************************************************************
 * Copyright (C) 2009 -                                     *
 * GSI Helmholtzzentrum fuer Schwerionenforschung GmbH      *
 * Planckstr. 1, 64291 Darmstadt, Germany                   *
 * Contact:  http://dabc.gsi.de                             *
 ************************************************************
 * This software can be used under the GPL license          *
 * agreements as stated in LICENSE.txt file                 *
 * which is part of the distribution.                       *
 ************************************************************/

#ifndef HTTP_Civetweb
#define HTTP_Civetweb

#ifndef HTTP_Server
#include "http/Server.h"
#endif

#include "../civetweb/civetweb.h"

namespace http {

   /** \brief %Server provides http access to DABC
    *
    */

   class Civetweb : public Server  {
      protected:
         std::string fHttpPort;      ///< port number for HTTP server
         std::string fHttpsPort;     ///< port number for HTTPS server
         int fNumThreads{0};            ///< number of civetweb threads
         std::string fAuthFile;      ///< authentication file, generated by htdigest utility
         std::string fAuthDomain;    ///< realm parameter in authentication, "dabc@server" is default
         std::string fSslCertif;     ///< SSL certificate file name in plm format

         struct mg_context *   fCtx{nullptr};
         struct mg_callbacks   fCallbacks;

         void OnThreadAssigned() override;

      public:
         Civetweb(const std::string &name, dabc::Command cmd = nullptr);
         virtual ~Civetweb();

         const char* ClassName() const override { return "HttpServer"; }

         static int begin_request_handler(struct mg_connection *conn, void*);

         static int log_message_handler(const struct mg_connection *conn, const char *message);
   };
}

#endif
