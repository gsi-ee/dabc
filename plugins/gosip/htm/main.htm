<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
  
    <meta http-equiv="X-UA-Compatible" content="IE=Edge; text/html">
    <title>GOSIP user interface</title>
    <link rel="stylesheet" type="text/css" href="/jsrootsys/style/jquery-ui.css">
    <script src="/jsrootsys/scripts/jquery.js" type="text/javascript"></script>
    <script src="/jsrootsys/scripts/jquery-ui.js" type="text/javascript"></script>
    <script src="gosip.js" type="text/javascript"></script>
    <style type="text/css">
    
		#header_container 
		{
			position:fixed;
			top:0; height:3em; 
			left:0; width:100%; 
			text-align:center;
		}
		#content_left
		{
			position:fixed;
			top:3em; bottom:3em;  
			left:0; width:80%;
		}
		#content_right
		{
			position:fixed;
			top:3em; bottom:3em;
			left:80%; width:20%;  
		}
		#footer_container
		{
			position:fixed;
			bottom:0; height:3em; 
			left:0; width: 100%;
			text-align:center;
			background-color:white;
		}
		
		.DacEdit {
		   width: 90%;
		}
		
      label {
        vertical-align: top;
      }
		</style>
		
      <script type="text/javascript">
   
      function ExecCommand() {
         //console.log("Execute");
         
         var elem = document.getElementById("status_message");
         
         var xmlHttp = new XMLHttpRequest();
         
         var cmdtext = '../CmdGosip/execute?sfp=' + $("#id_sfp").val() + '&dev='+$("#id_dev").val();
         
         cmdtext+="&cmd='[\"-r 0x876\",\"-r 0x176\",\"-w 0x564 0x234\"]'";
         
         elem.innerHTML = "Executing command ...";
         
         xmlHttp.open('GET', cmdtext, true);
         
         xmlHttp.onreadystatechange = function () {
            // console.log("onready change " + xmlHttp.readyState); 
            if (xmlHttp.readyState == 4) {
               var reply = JSON.parse(xmlHttp.responseText);
            
               if (reply)
                  elem.innerHTML = "Result = " + reply["_Result_"];
               else
                  elem.innerHTML = "command fail";
            }
         };
         
         xmlHttp.send(null);
      }
      
      function ButtonAction() {
         console.log("sfp = " + $("#id_sfp").val() + "  dev = " + $("#id_dev").val() 
                      + " active = " + $("#tabs").tabs("option","active"));
      }

      var Setup;
      
      function ReadSlave() {
         if (document.getElementById("broadcast").checked) {
           Setup.fSFP = -1;
           Setup.fDEV = -1;
         } else {
           Setup.fSFP = Number($("#id_sfp").val());
           Setup.fDEV = Number($("#id_dev").val());
         }
         Setup.fLogging = document.getElementById("Verbose").checked;         
      }
      
      function SetStatusMessage(info)
      {
         var d = new Date();
         var txt = d.toLocaleTimeString() + " SFP:" + Setup.fSFP + " DEV:"+Setup.fDEV + "  " + info;
         document.getElementById("status_message").innerHTML = txt; 
      }
      
      function updateElementsSize()
      {
         var h = $('#tabs').height();
         var t = $('#tabs').offset().top;
         var h0 = $('#content_right').height();
           
         var lx = h0 - t - h;
         if (lx<100) lx = 100;
         $('#logging').height(lx);
         
         $("#QFWModeCombo").selectmenu("option","width", $('#tabs-1-table').width());
         $("#DacModeCombo").selectmenu("option","width", $('#tabs-2-table').width());
      }
      
      
      function RefreshView(res) {
      
         SetStatusMessage("Reading registers " + (res ? "OK" : "Fail"));
         
         if (Setup.fLogData!=null) {
            var ddd = "";
            // console.log("log length = " + Setup.fLogData.length); 
            for (var i in Setup.fLogData) {
               ddd += "<pre>";
               ddd += Setup.fLogData[i];
               ddd += "</pre>";
            }
            
            document.getElementById("logging").innerHTML += ddd;
                
            Setup.fLogData = null;
         }

         if (!res) return;
         
         var base = document.getElementById("HexMode").checked ? 16 : 10;
         
         Setup.RefreshQFW(base);
         
         Setup.RefreshDAC(base);
         
         Setup.RefreshCounters(base);
         
         updateElementsSize();
      }
      
      function CompleteCommand(res) {
         
         SetStatusMessage("Writing registers " + (res ? "OK" : "Fail"));
         
         if (Setup.fLogData!=null) {
            var ddd = "";
            //console.log("log length = " + Setup.fLogData.length); 
            for (var i in Setup.fLogData) {
               ddd += "<pre>";
               ddd += Setup.fLogData[i];
               ddd += "</pre>";
            }
            
            document.getElementById("logging").innerHTML += ddd;
            Setup.fLogData = null;
         }
      }
       
      $(function() {

         Setup = new PolandSetup("../CmdGosip/execute");
      
         $("#tabs").tabs({
            activate: function(event, ui) { updateElementsSize(); }
         });
         
         $("#id_sfp").selectmenu();
         $("#id_dev").selectmenu();
         
         $( "#broadcast" ).button();
         
         $("#buttonScanOffset").button().click(function() { 
             ReadSlave();
             
             var response = confirm("Really scan offset for SFP chain " + Setup.fSFP + ", Slave "+Setup.fDEV+"?");
             if (!response) return;

             SetStatusMessage("Doing offset measurement...");
             var cmd = "[\"-w adr " + POLAND_REG_DO_OFFSET + " 1\", \"-w # " + POLAND_REG_DO_OFFSET + " 0\"]";
             var dumpcmd = "-d -r -x adr 0x" + POLAND_REG_OFFSET_BASE.toString(16) + " 0x20";
              
             Setup.GosipCommand(cmd, function(res) {
                SetStatusMessage("Scan offset " + (res ? "OK" : "Fail"));
                if (!res) return;
                Setup.GosipCommand(dumpcmd, function(res) {
                   SetStatusMessage("Dump data after scan " + (res ? "OK" : "Fail"));
                });
             }); 
         });
          
         $("#buttonInitChain").button().click(function() {
            ReadSlave();
            var numslaves = prompt("Please specify NUMBER OF DEVICES to initialize at SFP " + Setup.fSFP, "4");
            if (!numslaves) return;
            
            SetStatusMessage("Initializing chain...");
            
            var cmd = "-i " + Setup.fSFP + " " + numslaves;

            Setup.fLogging = true;

            Setup.GosipCommand(cmd, function(res) {
               SetStatusMessage("Initialize chain " + (res ? "OK" : "Fail"));
            }); 
            
         }); 
         $("#buttonReset").button().click(function() {
            ReadSlave();
            SetStatusMessage("Resetting logic on POLAND...");
            var cmd = "[\"-w adr " + POLAND_REG_RESET + " 0\", \"-w adr " + POLAND_REG_RESET + " 1\"]"; 
            Setup.GosipCommand(cmd, function(res) {
               SetStatusMessage("Reset logic on POLAND " + (res ? "OK" : "Fail"));
            }); 
            
         }); 
         $("#buttonResetPEX").button().click(function() { 
            SetStatusMessage("Resetting PEXOR...");
            Setup.fLogging = true;
            Setup.GosipCommand("-z", function(res) {
               SetStatusMessage("Reset of PEXOR " + (res ? "OK" : "Fail"));
            }); 
         });
         
         $("#DacModeCombo").selectmenu({
            change: function( event, ui ) { Setup.fDACMode = ui.item.value; Setup.RefreshDAC(); }
         });
         
         $("#QFWModeCombo").selectmenu( {
            change: function( event, ui ) { Setup.fQFWMode = ui.item.value; }
         });
         
         $("#buttonShow").button().click(function() { 
            ReadSlave(); 
            SetStatusMessage("Start register reading...");
            Setup.ReadRegisters(RefreshView); 
         });
          
         $("#buttonApply").button().click(function() {
            ReadSlave();

            Setup.EvaluateDAC();
            Setup.EvaluateQFW();
            
            var cmd = ($("#tabs").tabs("option","active")==0) ? "QFW" : "DAC";   
            
            SetStatusMessage("Start writing "+cmd);
            Setup.SetRegisters(cmd, CompleteCommand);
         });
          
         $("#buttonConfigure").button().click(function() { ButtonAction(); });
          
         $("#buttonDataDump").button().click(function() {
            ReadSlave(); 
            Setup.fLogging = true;
            SetStatusMessage("Dumping data...");
            var numwords = 32 + Number(Setup.fSteps[0]) * 32 + Number(Setup.fSteps[1])*32 + Number(Setup.fSteps[2]) * 32 + 32;
            if (numwords > 512) numwords = 512; 

            document.getElementById("logging").innerHTML += "--- Register Dump ---<br/>";
            
            Setup.GosipCommand("-d -r -x adr 0 0x" + numwords.toString(16), function(res) {
               SetStatusMessage("Dump data " + (res ? "OK" : "Fail"));
            }); 
         });
          
         $("#buttonClear").button().click(function() {
            document.getElementById("logging").innerHTML = 
              "<br/>GOSIP web interface v 0.1, 25 Jul 2014<br/> S.Linev/J.Adamzewski-Musch<br/>";
         }); 
       });
       
       function initGUI() {
          var base = document.getElementById("HexMode").checked ? 16 : 10;
          Setup.RefreshQFW(base);
          Setup.RefreshDAC(base);
          Setup.RefreshCounters(base);
          $("#buttonClear").button().click();
          
          updateElementsSize();
       } 
       
       $(document).ready(initGUI);
       
       $(window).on('resize', function(){  updateElementsSize(); });
      
   </script>
  </head>
  <body>
    <div id="header_container">
      <table style="width: 100%">
        <tbody>
          <tr>
            <td> <label for="id_sfp">SFP</label>
              <select name="name_id_sfp" id="id_sfp">
                <option selected="selected">0</option>
                <option>1</option>
                <option>2</option>
                <option>3</option>
              </select>
            </td>
            <td> <label for="id_dev">DEV</label>
              <select name="name_id_dev" id="id_dev">
                <option selected="selected">0</option>
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
                <option>6</option>
                <option>7</option>
                <option>8</option>
                <option>9</option>
              </select>
            </td>
            <td> <input id="broadcast" type="checkbox"><label for="broadcast">All Devs</label> </td>
            <td>  </td>
            <td> <button id="buttonScanOffset">ScanOffset</button> </td>
            <td> <button id="buttonInitChain">InitChain</button> </td>
            <td> <button id="buttonReset">Reset</button> </td>
            <td> <button id="buttonResetPEX">Reset PEX</button> </td>
          </tr>
        </tbody>
      </table>
    </div>
      <div id="content_left">
        <h3 id="status_message">Status message</h3>
        <div id="tabs">
          <ul>
            <li><a href="#tabs-1">QFW</a></li>
            <li><a href="#tabs-2">DAC</a></li>
          </ul>
          <div id="tabs-1">
            <table style="width: 100%">
              <tbody>
                <tr>
                  <td> <input id="MasterTrigger" type="checkbox"><label for="MasterTrigger">Trigger Master</label>  </td>
                  <td> <input id="InternalTrigger" type="checkbox"><label for="InternalTrigger">Internal Trigger</label> </td>
                  <td> <input id="FESAMode" type="checkbox"><label for="FESAMode">FESA Mode</label> </td>
                </tr>
              </tbody>
            </table>
            <select name="QFWModeCombo" id="QFWModeCombo">
              <option selected="selected" value="0">(-) [ 2.5pF & 0.25pC]</option>
              <option value="1">(-) [25.0pF & 2.50pC]</option>
              <option value="2">(+) [ 2.5pF & 0.25pC]</option>
              <option value="3">(+) [25.0pF & 2.50pC]</option>
              <option value="16">1000uA (-) [ 2.5pF & 0.25pC]</option>
              <option value="17">1000uA (-) [25.0pF & 2.50pC]</option>
              <option value="18">1000uA (+) [ 2.5pF & 0.25pC]</option>
              <option value="19">1000uA (+) [25.0pF & 2.50pC]</option>
            </select>
            <table id="tabs-1-table" style="width: 100%">
              <tbody>
                <tr>
                  <td> </td>
                  <td nowrap> Step </td>
                  <td nowrap> Time per Step [mus] </td>
                </tr>
                <tr>
                  <td nowrap> Time slice 1 </td>
                  <td> <input class="DacEdit" id="TS1Loop" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="TS1Time" value="0" type="text"> </td>
                </tr>
                <tr>
                  <td nowrap> Time slice 2 </td>
                  <td> <input class="DacEdit" id="TS2Loop" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="TS2Time" value="0" type="text"> </td>
                </tr>
                <tr>
                  <td nowrap> Time slice 3 </td>
                  <td> <input class="DacEdit" id="TS3Loop" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="TS3Time" value="0" type="text"> </td>
                </tr>
              </tbody>
            </table>
          </div>
          <div id="tabs-2">
            <select name="DacModeCombo" id="DacModeCombo">
              <option selected="selected" value="1">Set Manually (mode 1)</option>
              <option value="2">Test Structure (mode 2)</option>
              <option value="3">Calibrate (mode 3)</option>
              <option value="4">All Constant (mode 4)</option>
            </select>
            <table id="tabs-2-table" style="width: 100%">
              <tbody>
                <tr>
                  <td nowrap> Value </td>
                  <td nowrap> Offset </td>
                  <td nowrap> Offset Delta </td>
                  <td nowrap> Cal. time (ms) </td>
                </tr>
                <tr>
                  <td> <input class="DacEdit" id="DacStart" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacOffset" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacDeltaOffset" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacCalibTime" value="0" type="text"> </td>
                </tr>
                <tr> </tr>
                <tr>
                  <td> <input class="DacEdit" id="DacEdit1" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit2" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit3" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit4" value="0" type="text"> </td>
                </tr>
                <tr>
                  <td> <input class="DacEdit" id="DacEdit5" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit6" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit7" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit8" value="0" type="text"> </td>
                </tr>
                <tr>
                  <td> <input class="DacEdit" id="DacEdit9" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit10" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit11" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit12" value="0" type="text"> </td>
                </tr>
                <tr>
                  <td> <input class="DacEdit" id="DacEdit13" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit14" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit15" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit16" value="0" type="text"> </td>
                </tr>
                <tr>
                  <td> <input class="DacEdit" id="DacEdit17" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit18" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit19" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit20" value="0" type="text"> </td>
                </tr>
                <tr>
                  <td> <input class="DacEdit" id="DacEdit21" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit22" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit23" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit24" value="0" type="text"> </td>
                </tr>
                <tr>
                  <td> <input class="DacEdit" id="DacEdit25" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit26" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit27" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit28" value="0" type="text"> </td>
                </tr>
                <tr>
                  <td> <input class="DacEdit" id="DacEdit29" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit30" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit31" value="0" type="text"> </td>
                  <td> <input class="DacEdit" id="DacEdit32" value="0" type="text"> </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
        
        <div id="logging" style="width: 100%; height: 300px; overflow-y: auto;">
        </div>
      </div>
      <div id="content_right">
        <h3 style="text-align: center">QFW Counters</h3>
        <h3 style="text-align: center">Trigger</h3>
        <div align="center" id="TriggerLbl" style="width: 100%"> </div>
        <br/>
        <h3 style="text-align: center">Errors</h3>
        <div align="center" id="ErrorsLbl" style="width: 100%"> </div>
        <br/>
        <input id="HexMode" type="checkbox"><label for="HexMode">Hexmode</label><br/>
        <input id="Verbose" type="checkbox"><label for="Verbose">Verbose</label><br/>
      </div>
      
    <div id="footer_container">
      <table style="width: 100%">
        <tbody>
          <tr>
            <td> <button id="buttonShow">Show</button> </td>
            <td> <button id="buttonApply">Apply</button> </td>
            <td> <button id="buttonConfigure">Configure</button> </td>
            <td> <br/>
            </td>
            <td> <button id="buttonDataDump">DataDump</button> </td>
            <td> <button id="buttonClear">Clear</button> </td>
          </tr>
        </tbody>
      </table>
    </div>
  </body>
</html>
