using std
using gsi_gs
#using geant4

processor trigger std.single
	value <- event.trigger
	histogram value 16,0,16
end

crate LyccaWallCrate1
	procid		70
	triggers	all
	module 		adc01	gsi_gs.CAENv785
	module 		adc02	gsi_gs.CAENv785
	module 		adc05	gsi_gs.CAENv785
	module 		adc06	gsi_gs.CAENv785
	module 		adc07	gsi_gs.CAENv785
	module 		adc08	gsi_gs.CAENv785
	module 		adc11	gsi_gs.CAENv785
	module 		adc12	gsi_gs.CAENv785
	module		mhtdc	gsi_gs.CAENv767
	hitpattern
end

crate LyccaWallCrate2
	procid		80
	triggers	all
	module 		adc13	gsi_gs.CAENv785
	module 		adc14	gsi_gs.CAENv785
	module 		adc17	gsi_gs.CAENv785
	module 		adc18	gsi_gs.CAENv785
	module 		adc19	gsi_gs.CAENv785
	module 		adc20	gsi_gs.CAENv785
	module 		adc23	gsi_gs.CAENv785
	module 		adc24	gsi_gs.CAENv785
	module		mhtdc	gsi_gs.CAENv767
	hitpattern
end
#crate  LyccaWallCsICrate
#	procid		85
#	triggers	all
#	module			adc0	gsi_gs.MADC32
#	module			adc1	gsi_gs.MADC32
#	module			adc2	gsi_gs.MADC32
#	module			adc3	gsi_gs.MADC32
#	module			adc4	gsi_gs.MADC32
#	module			adc5	gsi_gs.MADC32
#	module			tdc0	gsi_gs.CAENv775
#	module			tdc1	gsi_gs.CAENv775
#	module			mhtdc	gsi_gs.CAENv767
#	hitpattern
#end
crate  LyccaTargetTofCrate
	procid		90
	triggers	all
	module			adc0	gsi_gs.CAENv785
	module			adc1	gsi_gs.CAENv785
	module			tdc 	gsi_gs.CAENv775
	module			mhtdc0	gsi_gs.CAENv1290TMM
	module			mhtdc1	gsi_gs.CAENv1290TMM
	module			mhtdc2	gsi_gs.CAENv1290TMM
	hitpattern
	display
end

crate FrsCrate
	procid 10
	module header  std.single32bit
	module hp      gsi_gs.FRShp
	module tdc0      gsi_gs.CAENv775frs
	module tdc1      gsi_gs.CAENv775frs
	module adc0      gsi_gs.CAENv785frs
	module qdc1      gsi_gs.CAENv792frs
	#print
	display
	for $i in 0
	hitpattern
	end
end

processor Frs/Scintillators/dEnergySc21  std.pair
          first <-  FrsCrate.qdc1[16]
          second <- FrsCrate.qdc1[17]
          display first:second        
          display first               
          display second              
end


alias $NUM_CHANNELS = 20
crate SIS3302
	procid 120
	triggers all
	for $i in [0:{$NUM_CHANNELS-1}]
		module header_$i_0  std.single32bit
		module header_$i_1  std.single32bit
		module header_$i_2  std.single32bit
		module header_$i_3  std.single32bit
		module header_$i_4  std.single32bit
		module trace_$i     std.multiple32bit(200)
	end	
	for $j in [0:10]
	#blub
	end
	#hitpattern
end

processor SIS3302/traces std.array adhoc
	parameter index_range = $NUM_CHANNELS
	for $i in [0:{$NUM_CHANNELS-1}]
		entry[$i] <- SIS3302.trace_$i[0]
	end
	waveform entry
end

for $h in [0:4]
	processor SIS3302/header_$h/channels std.array adhoc
		parameter index_range = $NUM_CHANNELS
		for $i in [0:{$NUM_CHANNELS-1}]
			entry[$i] <- SIS3302.header_$i_$h[0]
		end
		histogram entry 3000,0,500000
	end
	processor SIS3302/header_$h/channel_sum std.array adhoc
		parameter index_range = 1
		for $i in [0:{$NUM_CHANNELS-1}]
			entry[0] <- SIS3302.header_$i_$h[0]
		end
		histogram sum 3000,0,5000000
	end
end


#processor simulation/EventGenerator geant4.PlungerSimulator
#	histogram decay_E  4096,0,4096
#	histogram decay_beta
#end
#processor simulation/Geant4Detector geant4.DetectorGeant4
#	gamma_pos_x[0] <- simulation/EventGenerator.decay_x[0]
#	gamma_pos_y[0] <- simulation/EventGenerator.decay_y[0]
#	gamma_pos_z[0] <- simulation/EventGenerator.decay_z[0]
#	gamma_dir_x[0] <- simulation/EventGenerator.decay_rx[0]
#	gamma_dir_y[0] <- simulation/EventGenerator.decay_ry[0]
#	gamma_dir_z[0] <- simulation/EventGenerator.decay_rz[0]
#	gamma_T[0]     <- simulation/EventGenerator.decay_t[0]
#	gamma_E[0]     <- simulation/EventGenerator.decay_E[0]
#	
#	histogram detected_E:::detected_E  2048,0,1024:2048,0,1024
#	histogram detected_E  2048,0,4096
#end

#processor simulation/GeGe std.array_pair adhoc
#	parameter index_range_first  = 14
#	parameter index_range_second = 14
#	first[0:13]  <- simulation/Geant4Detector.detected_E[0:13]
#	second[0:13] <- simulation/Geant4Detector.detected_E[0:13]
#	histogram first:::second 2048,0,1024:2048,0,1024
#end
#processor simulation/LaBrLaBr std.array_pair adhoc
#	parameter index_range_first  = 6
#	parameter index_range_second = 6
#	first[0:5]  <- simulation/Geant4Detector.detected_E[14:19]
#	second[0:5] <- simulation/Geant4Detector.detected_E[14:19]
#	histogram first:::second 512,0,1024:512,0,1024
#end

for $direction in x y
	processor generator/gauss_$direction std.rand_gaussian adhoc
		parameter mean  = 0
		parameter sigma = 1
		histogram value 100
	end
end
processor generator/gauss_xy std.pair
	first  <- generator/gauss_x.value
	second <- generator/gauss_y.value
	histogram first:second 500,-10,10:500,-10,10
end
processor dsssd/pAmplitude_pOverflow std.pair
	for $i in [0:31]
		first  <- LyccaTargetTofCrate.adc0[$i].amplitude
		second <- LyccaTargetTofCrate.adc0[$i].overflow
	end
	histogram first:second 200,0,5000:200,0,5000
end
processor dsssd/pn_amplitude std.pair
	for $i in [0:31]
		first  <- LyccaTargetTofCrate.adc0[$i].amplitude
		second <- LyccaTargetTofCrate.adc1[$i].amplitude
	end
	histogram first:second 1000:1000
end
processor dsssd/p_n_overflow std.array
	parameter index_range = 2
	for $i in [0:31]
		entry[0] <- LyccaTargetTofCrate.adc0[$i].overflow
		entry[1] <- LyccaTargetTofCrate.adc1[$i].overflow
	end
	histogram entry
end
processor dsssd/p_n_underthreshold std.array
	parameter index_range = 2
	for $i in [0:31]
		entry[0] <- LyccaTargetTofCrate.adc0[$i].underthreshold
		entry[1] <- LyccaTargetTofCrate.adc1[$i].underthreshold
	end
	histogram entry
end


for $i in [10:67]
	processor generator/rand_$i std.rand_uniform adhoc
		parameter left  = 50
		parameter right = 100
		histogram value in rand
	end
end

alias $N = 9
processor trace std.array adhoc
	parameter index_range = $N
	for $i in [0:{$N-1}]
		for $j in [0:49]
			entry[$i] <- generator/rand_{10+$i+$j}.value
		end
	end
	histogram entry
	waveform  entry
	picture   entry 10:5
end

processor EventRate std.pair
	first  <- event.number
	second <- event.time
	ratemeter first:second 0.1,200
end

processor conditions/poly std.condition_window2d
	x <- generator/rand_10.value
	y <- generator/rand_11.value
	histogram x:y | xy_window
end

processor gated/test std.pair
	first     <- generator/rand_10.value
	second    <- generator/rand_11.value
	condition <- conditions/poly.inside
	histogram valid_first:valid_second
end


