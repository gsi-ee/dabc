<?xml version="1.0"?>

<dabc version="2">

  <Variables>
     <bnetsenders value="[localhost:12501,localhost:12502]"/>
     <bnetreceivers value="[localhost:12101,localhost:12102]"/>
     <hadaqports1 value="[50000,50001,50002]"/>
     <hadaqports2 value="[50003,50004]"/>
     <masteraddr value="localhost:23456"/>
     <test_time value="300000"/>
  </Variables>

  <Context host="localhost" name="FirstLvl1" port="12501">
    <Run>
      <lib value="libDabcMbs.so"/>
      <lib value="libDabcHadaq.so"/>  
      <lib value="libDabcStream.so"/>  
      <logfile value="first1.log"/>
      <loglevel value="1"/>
      <debuglevel value="1"/>
      <loglimit value="100000"/>
      <threads_layout value="balanced"/>
      <runtime value="${test_time}"/>
      <master value="${masteraddr}"/>
      <publisher value="true"/>
    </Run>
    
    <MemoryPool name="Pool">
       <BufferSize value="200000"/>
       <NumBuffers value="300"/>
    </MemoryPool>
    
    <Device name="NetDev" class="dabc::SocketDevice"/>

    <!-- these are default parameters for TDC calibration modules -->
    <Module name="TRB*_TdcCal">    
       <!-- Minimal and maximal bins for linear calibration -->
       <FineMin value="31"/>
       <FineMax value="480"/>
       
       <!-- number of TDC channels -->
       <NumChannels value="33"/>
       
       <!-- 1 - use only rising edge, falling edge is ignore
            2 - falling edge enabled and fully independent from rising edge
            3 - falling edge enabled and uses calibration from rising edge
            4 - falling edge enabled and common statistic is used for calibration -->
       <EdgeMask value="1"/>
       
       <!-- when auto mode enabled - this is allowed range for TDC ids -->
       <TdcMin value="0x1000"/>
       <TdcMax value="0x5000"/>
       
       <!-- If TDC created automatically, 0-off, 1 - with linear configuration, 2 - with normal calibrations 
            In the URL it is coded as "calibr" parameter -->
       <Mode value="-1"/>
       
       <!-- histogram filling level
            0 - no histograms,
            1 - only generic statistic for TRB
            2 - basic statistic for TDC (like hits per channel)
            3 - histograms for each active channel will be created, 
            4 - also reference histograms could be created (not yet available in DABC)  -->
       <HistFilling value="4"/>
       
       <!-- file prefix where calibration will be stored or loaded -->
       <CalibrFile value="local"/>
       
       <!-- Which trigger used for calibration. 0xffff - all triggers, 0xD - from internal pulser, [0x2, 0x3] - two trigger types -->
       <CalibrTrigger value="0xffff"/>
       
       <!-- Which channels should be excluded from calibration - either file will be used or just linear function -->
       <!--  DisableCalibrationFor value="0"/-->
       
       <!-- Number of counts in each channel to perform calibration, 0 - off -->
       <Auto value="0"/>

       <!-- Number of counts for different kinds of calibrations -->
       <CountLinear value="10000"/>
       <CountNormal value="100000"/>

       <!-- Should calibrated value replace old message (true, set by default) or
            new calibration data should be inserted before hit messages (false)
            When Replace==false, size of HLD data increased by 25%, but original data are preserved -->
       <Replace value="true"/>
    </Module>

   <Module name="FirstLevel" class="hadaq::CombinerModule">
        <!-- these parameters will force to create inputs/outputs of module -->
       <BNETsend value="true"/>
       <!-- number of event send to same event builder -->
       <EB_EVENTS value="16"/>
       <NumInputs value="#${hadaqports1}"/>
       <NumOutputs value="#${bnetreceivers}"/>

       <InputPort name="Input0" urlopt1="trb=0x8000&tdc=[0x3000,0x3010,0x3020,0x3030]&calibr=1&dummy"/>
       <InputPort name="Input1" urlopt1="trb=0x8010&tdc=[0x3100,0x3110,0x3120,0x3130]&calibr=1&dummy"/>
       <InputPort name="Input2" urlopt1="trb=0x8020&tdc=[0x3300,0x3310,0x3320,0x3330]&calibr=1&dummy"/>

       <InputPort name="Input*" queue="10" url="nhadaq://host:${hadaqports1}#" urlopt="udpbuf=200000&mtu=64512&flush=0.5&observer=false&maxloop=20"/>

<!--        <InputPort name="Input0" url="nhadaq://host:50000"/> -->
<!--        <InputPort name="Input1" url="nhadaq://host:50001"/> -->
<!--        <InputPort name="Input2" url="nhadaq://host:50002"/> -->
       <OutputPort name="Output*" optional="true" queue="30"/>
       
       <AccountLostEventDiff value="true"/>
       <ExtraDebug value="false"/>
       <FlushTimeout value="0.5"/>
       <TriggerNumRange value="0x1000000"/>
       
       <!-- rate meters configuration, not seen with terminal module -->
       <HadaqData width="4" prec="2" low="0" up="10" debug="1"/>
       <HadaqEvents width="5" prec="1" low="0" up="1000" debug="1"/>
       <HadaqDroppedData width="5" prec="3" low="0" up="1" debug="1"/>
       <HadaqLostEvents width="4" prec="2" low="0" up="100" debug="1"/>
       
     </Module>
     
     <Connection device="NetDev" list="${bnetreceivers}" 
                 output="FirstLevel/Output%id%" input="dabc://%name%/Combiner/Input0"/>

     <Module name="Term" class="hadaq::TerminalModule" mname="FirstLevel" period="0.3" show="false" clear="false" fileport="1" servport="0" showtrig="16"/>
     
<!--      <Connection device="NetDev" output="FirstLevel/Output0" input="dabc://localhost:12101/Combiner/Input0"/> -->
     
  </Context>

  <Context host="localhost" name="FirstLvl2" port="12502">
    <Run>
      <lib value="libDabcMbs.so"/>
      <lib value="libDabcHadaq.so"/>  
      <lib value="libDabcStream.so"/>  
      <logfile value="first2.log"/>
      <loglevel value="1"/>
      <debuglevel value="1"/>
      <loglimit value="100000"/>
      <threads_layout value="balanced"/>
      <runtime value="${test_time}"/>
      <master value="${masteraddr}"/>
      <publisher value="true"/>
    </Run>
    
    <MemoryPool name="Pool">
       <BufferSize value="200000"/>
       <NumBuffers value="300"/>
    </MemoryPool>

    <Device name="NetDev" class="dabc::SocketDevice"/>

    <!-- these are default parameters for TDC calibration modules -->
    <Module name="TRB*_TdcCal">    
       <!-- Minimal and maximal bins for linear calibration -->
       <FineMin value="31"/>
       <FineMax value="480"/>
       
       <!-- number of TDC channels -->
       <NumChannels value="33"/>
       
       <!-- 1 - use only rising edge, falling edge is ignore
            2 - falling edge enabled and fully independent from rising edge
            3 - falling edge enabled and uses calibration from rising edge
            4 - falling edge enabled and common statistic is used for calibration -->
       <EdgeMask value="1"/>
       
       <!-- when auto mode enabled - this is allowed range for TDC ids -->
       <TdcMin value="[0x1000, 0x3000]"/>
       <TdcMax value="[0x2000, 0x5000]"/>
       
       <!-- If TDC created automatically, 0-off, 1 - with linear configuration, 2 - with normal calibrations 
            In the URL it is coded as "calibr" parameter -->
       <Mode value="-1"/>
       
       <!-- histogram filling level
            0 - no histograms,
            1 - only generic statistic for TRB
            2 - basic statistic for TDC (like hits per channel)
            3 - histograms for each active channel will be created, 
            4 - also reference histograms could be created (not yet available in DABC)  -->
       <HistFilling value="3"/>
       
       <!-- file prefix where calibration will be stored or loaded -->
       <CalibrFile value="local"/>
       
       <!-- Which trigger used for calibration. 0xffff - all triggers, 0xD - from internal pulser, [0x2, 0x3] - two trigger types -->
       <CalibrTrigger value="0xffff"/>
       
       <!-- Which channels should be excluded from calibration - either file will be used or just linear function -->
       <!--  DisableCalibrationFor value="0"/-->
       
       <!-- Number of counts in each channel to perform calibration, 0 - off -->
       <Auto value="0"/>

       <!-- Number of counts for different kinds of calibrations -->
       <CountLinear value="10000"/>
       <CountNormal value="100000"/>

       <!-- Should calibrated value replace old message (true, set by default) or
            new calibration data should be inserted before hit messages (false)
            When Replace==false, size of HLD data increased by 25%, but original data are preserved -->
       <Replace value="true"/>
    </Module>

    
    <Module name="FirstLevel" class="hadaq::CombinerModule">    
        <!-- these parameters will force to create inputs/outputs of module -->
       <BNETsend value="true"/>
       <!-- number of event send to same event builder -->
       <EB_EVENTS value="16"/>
       <NumInputs value="#${hadaqports2}"/>
       <NumOutputs value="#${bnetreceivers}"/>

       <InputPort name="Input0" urlopt1="trb=0x8100&tdc=[0x4000,0x4010,0x4020,0x4030]&calibr=1&dummy"/>
       <InputPort name="Input1" urlopt1="trb=0x8110&tdc=[0x4100,0x4110,0x4120,0x4130]&calibr=1&dummy"/>

       <InputPort name="Input*" queue="10" url="nhadaq://host:${hadaqports2}#" urlopt="udpbuf=200000&mtu=64512&flush=0.5&observer=false&maxloop=20"/>
<!--        <InputPort name="Input0" url="nhadaq://host:50003"/> -->
<!--        <InputPort name="Input1" url="nhadaq://host:50004"/> -->

       
       <OutputPort name="Output*" optional="true" queue="30"/>
       
       <AccountLostEventDiff value="true"/>
       <ExtraDebug value="false"/>
       <FlushTimeout value="0.5"/>   
       <TriggerNumRange value="0x1000000"/>
       
       <!-- rate meters configuration, not seen with terminal module -->
       <HadaqData width="4" prec="2" low="0" up="10" debug="1"/>
       <HadaqEvents width="5" prec="1" low="0" up="1000" debug="1"/>
       <HadaqDroppedData width="5" prec="3" low="0" up="1" debug="1"/>
       <HadaqLostEvents width="4" prec="2" low="0" up="100" debug="1"/>
       
    </Module>

     <Connection device="NetDev" list="${bnetreceivers}" 
                 output="FirstLevel/Output%id%" input="dabc://%name%/Combiner/Input1"/>

     <Module name="Term" class="hadaq::TerminalModule" mname="FirstLevel" period="0.3" show="false" clear="false" fileport="1" servport="0" showtrig="16"/>

<!--     <Connection device="NetDev" output="FirstLevel/Output0" input="dabc://localhost:12101/Combiner/Input1"/> -->
    
  </Context>

  <Context host="localhost" name="EventBuilder1" port="12101">
    <Run>
      <lib value="libDabcMbs.so"/>
      <lib value="libDabcHadaq.so"/>  
      <logfile value="builder1.log"/>
      <loglevel value="1"/>
      <debuglevel value="1"/>
      <loglimit value="100000"/>
      <threads_layout value="balanced"/>
      <runtime value="${test_time}"/>
      <master value="${masteraddr}"/>
      <publisher value="true"/>
    </Run>
    
    <!-- HttpServer name="http" port="8090"/-->
    
    <!-- If uncommented, profiling will be enabled for all threads -->
    <!-- Thread name="*" publ="true" prof="true"/ -->
    
    <MemoryPool name="Pool">
       <BufferSize value="200000"/>
       <NumBuffers value="500"/>
    </MemoryPool>
    
    <Application ConnTimeout="60"/>

    <Device name="NetDev" class="dabc::SocketDevice"/>

    <Module name="Combiner" class="hadaq::CombinerModule">
        <!-- these parameters will force to create inputs/outputs of module -->
       <BNETrecv value="true"/>
       <NumInputs value="#${bnetsenders}"/>
       <NumOutputs value="2"/>

       <InputPort name="*" queue="30" optional="true"/>

       <!--  this is stream server for online monitoring, normally always on -->
       <OutputPort name="Output0" url="mbs://Stream:6781?iter=hadaq_iter&subid=0x1f"/>

       <!--  this is example of HLD file storage - local, set NumOutputs=2 -->
       <OutputPort name="Output1" url="hld://dabc.hld?maxsize=5000&ebnumber=1&slave"/>
       
       <!--  this is example of HLD file storage, which retries to create new files in case of error (disk full).
             transport runs in own thread to exclude blocking of other transports if file operation hangs -->
       <!--OutputPort name="Output1" url="hld://dabc.hld?maxsize=2000" retry="5" blocking="never" thread="FileThread"/-->
       
       <ExtraDebug value="false"/>
       <FlushTimeout value="0.5"/>   
       <TriggerNumRange value="0x1000000"/>
       
       <!-- rate meters configuration, not seen with terminal module -->
       <HadaqData width="4" prec="2" low="0" up="10" debug="1"/>
       <HadaqEvents width="5" prec="1" low="0" up="1000" debug="1"/>
       <HadaqDroppedData width="5" prec="3" low="0" up="1" debug="1"/>
       <HadaqLostEvents width="4" prec="2" low="0" up="100" debug="1"/>
       
     </Module>
     
     <Connection device="NetDev" list="${bnetsenders}" 
                 output="dabc://%name%/FirstLevel/Output0" input="Combiner/Input%id%"/>
     
<!--      <Connection device="NetDev" output="dabc://localhost:12502/FirstLevel/Output0" input="Combiner/Input1"  pool="Pool"/> -->
     
     <!-- Terminal output like old event builder -->
     <Module name="Term" class="hadaq::TerminalModule" period="0.3" show="false" clear="false" fileport="1" servport="0" showtrig="16"/>

  </Context>

  <Context host="localhost" name="EventBuilder2" port="12102">
    <Run>
      <lib value="libDabcMbs.so"/>
      <lib value="libDabcHadaq.so"/>  
      <logfile value="builder2.log"/>
      <loglevel value="1"/>
      <debuglevel value="1"/>
      <loglimit value="100000"/>
      <threads_layout value="balanced"/>
      <runtime value="${test_time}"/>
      <master value="${masteraddr}"/>
      <publisher value="true"/>
    </Run>
    
    <!-- HttpServer name="http" port="8090"/-->

    <!-- If uncommented, profiling will be enabled for all threads -->
    <!-- Thread name="*" publ="true" prof="true"/ -->
    
    <MemoryPool name="Pool">
       <BufferSize value="200000"/>
       <NumBuffers value="500"/>
    </MemoryPool>

    <Device name="NetDev" class="dabc::SocketDevice"/>
    
    <Application ConnTimeout="60"/>

    <Module name="Combiner" class="hadaq::CombinerModule">    
        <!-- these parameters will force to create inputs/outputs of module -->
       <BNETrecv value="true"/>
       <NumInputs value="#${bnetsenders}"/>
       <NumOutputs value="2"/>

       <InputPort name="*" queue="30" optional="true"/>

       <!--  this is stream server for online monitoring, normally always on -->
       <OutputPort name="Output0" url="mbs://Stream:6782?iter=hadaq_iter&subid=0x1f"/>

       <!--  this is example of HLD file storage - local, set NumOutputs=2 -->
       <OutputPort name="Output1" url="hld://dabc.hld?maxsize=5000&ebnumber=2&slave"/>
       
       <!--  this is example of HLD file storage, which retries to create new files in case of error (disk full).
             transport runs in own thread to exclude blocking of other transports if file operation hangs -->
       <!--OutputPort name="Output1" url="hld://dabc.hld?maxsize=2000" retry="5" blocking="never" thread="FileThread"/-->
       
       <ExtraDebug value="false"/>
       <FlushTimeout value="0.5"/>
       <TriggerNumRange value="0x1000000"/>

       <!-- rate meters configuration, not seen with terminal module -->
       <HadaqData width="4" prec="2" low="0" up="10" debug="1"/>
       <HadaqEvents width="5" prec="1" low="0" up="1000" debug="1"/>
       <HadaqDroppedData width="5" prec="3" low="0" up="1" debug="1"/>
       <HadaqLostEvents width="4" prec="2" low="0" up="100" debug="1"/>
       
     </Module>
     
     <Connection device="NetDev" list="${bnetsenders}" 
                 output="dabc://%name%/FirstLevel/Output1" input="Combiner/Input%id%"/>
     
<!--      <Connection device="NetDev" output="dabc://localhost:12502/FirstLevel/Output0" input="Combiner/Input1"  pool="Pool"/> -->
     
     <!-- Terminal output like old event builder -->
     <Module name="Term" class="hadaq::TerminalModule" period="0.3" show="false" clear="false" fileport="1" servport="0" showtrig="16"/>

  </Context>


</dabc>
