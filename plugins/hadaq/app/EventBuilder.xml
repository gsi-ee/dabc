<?xml version="1.0"?>

<!-- 
This is example file how HADAQ event building should be configured in DABC.
Event building process implemented in Combiner module of hadaq::CombinerModule class.
Module can have several inputs, each with separate port number for receiving data 
from TRB boards. In each input port configuration only port number has meaning.
First output of combiner module reserved for the connection to 
the optional MBS transmitter module. Second output can be use to store data in hld files. 
To enable storage, one should specify two output ports and correctly configure Output1 of combiner module.

Optionally one can enable MBS transmitter module, which converts HLD to LMD format.
To enable transmitter, one should specify auto="true" in configuration which says DABC
to automatically create module when starting application. 
First output of the module reserved for stream server, second output can be used to
store data in lmd files. 

One can enable HTTP server, ucommenting line with libDabcHttp.so library.
This will start server with configured port, which also able to accept connection from clients.
Means server can provide access not only to data from current process, but also to clients.
In this particular case one can connect go4 analsys to dabc with command:
   [shell] go4analysis -stream dabc_node -dabc dabc_node:4444 
When running from gui, extra argument "-dabc dabc_node:4444" should be specified.
At the moment http server provides view of ratemeters and display of ROOT histograms and graphs 

-->

<dabc version="2">
  <Context host="localhost" name="EventBuilder" port="4444">
    <Run>
      <lib value="libDabcMbs.so"/>
      <lib value="libDabcHadaq.so"/>  
      <!--lib value="libDabcHttp.so"/-->  
      <logfile value="hadaqevtbuild.log"/>
      <loglimit value="1000000"/>
      <!--affinity value="-1"/-->
    </Run>
    
    <HttpServer name="http">
       <enabled value="true"/>
       <port value="8090"/>
       <topname value="${Context}"/>
       <select value="App"/>
       <clients value="true"/>
    </HttpServer>
    
    <MemoryPool name="Pool">
       <BufferSize value="200000"/>
       <NumBuffers value="1000"/>
    </MemoryPool>

    <Module name="Combiner" class="hadaq::CombinerModule">    
        <!-- these parameters will force to create inputs/oputputs of module -->
       <NumInputs value="5"/>
       <NumOutputs value="1"/>

       <InputPort name="Input0" url="hadaq://host:10101"/>
       <InputPort name="Input1" url="hadaq://host:10102"/>
       <InputPort name="Input2" url="hadaq://host:10103"/>
       <InputPort name="Input3" url="hadaq://host:10104"/>
       <InputPort name="Input4" url="hadaq://host:10105"/>

       <InputPort name="Input*" queue="10">
          <HadaqUdpBuffer value="200000"/>
          <DoShmControl value="false"/>  
          <HadaqUdpMTU value="64512"/>
          <FlushTimeout value="2.0"/>   
       </InputPort>
       
       <OutputPort name="Output1" url="hld://dabc.hld?maxsize=30"/>

       <DoShmControl value="false"/>  
       <FlushTimeout value="2.0"/>   

       <!-- take event sequence number from vulom/roc sync message at cts -->
       <UseSyncSequenceNumber value="false"/>
       <SyncSubeventId value="0x8000"/>
       <SyncTriggerMask value="0x01"/>
       <PrintSync value="false"/>
       <FlushBySync value="false"/>

       <!-- rate meters configuration -->
       <HadaqData width="4" prec="2" low="0" up="10" debug="1"/>
       <HadaqEvents width="5" prec="1" low="0" up="1000" debug="1"/>
       <HadaqDroppedData width="5" prec="3" low="0" up="1" debug="1"/>
       <HadaqLostEvents width="4" prec="2" low="0" up="100" debug="1"/>
     </Module>

     <Module name="OnlineServer" class="hadaq::MbsTransmitterModule" auto="true">
       <NumInputs value="1"/>
       <NumOutputs value="1"/>

       <InputPort name="Input0" url="Combiner/Output0" queue="10"/>

       <OutputPort name="Output0" url="mbs://Stream"/>
       <OutputPort name="Output1" url="lmd://test.lmd?maxsize=30&log=2"/>

       <!-- this is 32-bit MBS subevent id, which than can be seen in the analysis. Here procid=0x1f is configured -->
       <SubeventFullId value="0x000001F"/>

       <!-- If true, all events with the same SYNC number will be merged together into same MBS event -->
       <DoMergeSyncedEvents value="true"/>

       <TransmitData width="5" prec="3" low="0" up="50" debug="1"/>
       <TransmitEvents width="4" prec="1" low="0" up="100" debug="1"/>
     </Module>

  </Context>

  <!--Context name="*">
      <Thread name="CombinerThrdInp" class="dabc::SocketThread" affinity="+0"/>
  </Context-->
  
</dabc>
